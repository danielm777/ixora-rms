
# messages for the external process provider

# messages for the SQL provider
providers.sql.name=SQL
providers.sql.text=SQL Text
providers.sql.text.desc=SQL text providing data

# providers states
providers.enum.state.ready=ready
providers.enum.state.started=started
providers.enum.state.finished=finished
providers.enum.state.stopped=stopped
providers.enum.state.error=error
providers.enum.state.unknown=unknown
providers.enum.state.uninstalled=uninstalled

# providers locations
providers.enum.location.local=local
providers.enum.location.remote=remote

# providers errors
providers.error.provider_not_activated=Provider is not activated
providers.error.provider_not_installed=Provider "{0}" is not installed
providers.error.invalid_provider_configuration=Invalid provider configuration {0}
providers.parsers.error.invalid_data=Invalid data in parser: {0}

# process provider messages
providers.process.name=Process
providers.process.command=Command
providers.process.command.desc=The command used to launch the external process
providers.process.end_of_buffer_marker=End of buffer regex
providers.process.end_of_buffer_marker.desc=Regular expression that marks a line as being the end of a data buffer. If a process is not volatile and this parameter is left empty every line of output will be sent to the data parser otherwise lines will be buffered until a line where this regular expression has a match is found.
providers.process.is_volatile=Process is volatile
providers.process.is_volatile.desc=Set to true if the process needs to be restarted  after each data sample
providers.process.execution_mode=Process remote execution mode
providers.process.execution_mode.desc=Set the remote execution mode for the process of this provider
providers.process.username=Username
providers.process.username.desc=The username to use for the telnet or ssh2 session
providers.process.password=Password
providers.process.password.desc=The password to use for the telnet or ssh2 session
providers.process.shell_prompt=Shell prompt
providers.process.shell_prompt.desc=The shell prompt for the telnet session
providers.process.username_prompt=Username prompt
providers.process.username_prompt.desc=The prompt for username
providers.process.password_prompt=Password prompt
providers.process.password_prompt.desc=The prompt for password
providers.process.port=Connection port
providers.process.port.desc=The port for the remote connection

# parsers common
providers.parsers.accumulate_volatile_entities=Accumulate Volatile Entities
providers.parsers.tooltip.accumulate_volatile_entities=If the entities provided are volatile, i.e. they exist only for a certain period of time, by checking this box the parser will never remove expired entities.

# table parser
providers.parsers.table.name=Table
providers.parsers.table.column_index=Column
providers.parsers.table.column_entity_id=Entity ID
providers.parsers.table.column_counter_id=Counter ID
providers.parsers.table.column_separator=Column Separator
providers.parsers.table.ignore_lines_matching=Ignore Lines Matching
providers.parsers.table.columns_to_ignore=Ignore Data Columns At
providers.parsers.table.tooltip.columns_to_ignore=Comma delimited string of indexes. When more columns are present in the table data than there are column definitions you can specify here which columns to ignore; these indexes are for table data columns.
providers.parsers.table.tooltip.ignore_line_matching=All the lines where a match of this regular expression is found will be ignored.
providers.parsers.table.tooltip.column_separator=Characters separating columns in the table data.
providers.parsers.table.convert_single_column_to_row=Convert Column To Row
providers.parsers.table.tooltip.convert_single_column_to_row=Set to true to convert single column data to a row

# property parser
providers.parsers.property.name=Property
providers.parsers.property.column_entity_id=Entity ID
providers.parsers.property.column_counter_id=Counter ID
providers.parsers.property.entity_indentation=Entity Indentation
providers.parsers.property.property_value_regex=Property/Value Regex
providers.parsers.property.tooltip.property_value_regex=Regular expression with two groups, one for the property name and one for the value.
providers.parsers.property.entity_regex=Entity Regex
providers.parsers.property.tooltip.entity_regex=Regular expression with one group representing the entity name relative to the base entity.
providers.parsers.property.ignore_lines_matching=Ignore Lines Matching
providers.parsers.property.tooltip.ignore_lines_matching=All the lines where a match of this regular expression is found will be ignored.
providers.parsers.property.base_entity=Base Entity
providers.parsers.property.tooltip.base_entity=The entity which the name of entities retrieved from regular expressions are relative to.
providers.parsers.property.value_is_second_match=Value Is Second Group
providers.parsers.property.tooltip.value_is_second_match=Check this box if the second group in 'Property/Value Regex' is the value.

# java class provider
providers.java.name=Java
providers.java.classpath=Classpath
providers.java.classpath.desc=Classpath for code used by the implementation class
providers.java.classloader_id=Class loader id
providers.java.classloader_id.desc=The id of the class loader to use; Use the same id for multiple provider instances using the same code to allow sharing of resources.
providers.java.impl_class=Implementation class
providers.java.impl_class.desc=The name of the java class with the implementation for this provider
providers.java.parameters=Implementation class parameters
providers.java.parameters.desc=Parameters list to be passed to the impplementation class. Each parameter must be between double quotes (e.g. "param1" "param2")
providers.java.error.implementation_class_not_found=Implementation class "{0}" was not found.

# sql provider
providers.sql.name=SQL
providers.sql.classpath=Classpath
providers.sql.classpath.desc=Classpath pointing to the JDBC driver code
providers.sql.classloader_id=Class loader id
providers.sql.classloader_id.desc=The id of the class loader to use; Use the same id for multiple provider instances using the same code to allow sharing of resources.
providers.sql.driver_class=JDBC driver class name
providers.sql.username=Username
providers.sql.password=Password
providers.sql.driver_class.desc=The name of the JDBC driver class 
providers.sql.connection_string=JDBC connection string
providers.sql.connection_string.desc=The JDBC connection string
providers.sql.sql_query=SQL query
providers.sql.sql_query.desc=The SQL query to execute for data collection

