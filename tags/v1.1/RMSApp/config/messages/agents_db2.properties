agents.db2=DB2
db2.description=Allows monitoring of DB2 databases
config.username=DB2 User name
config.username.desc=User name to use when connecting to DB2 instance
config.password=DB2 Password
config.password.desc=Password to use when connecting to DB2 instance
config.instance=Instance
config.instance.desc=DB2 Instance to attach to
config.database=Database
config.database.desc=Collect perfomance data for specified database. If blank, global information will be returned.
config.uow.switch=Collect UOW information
config.uow.switch.desc=Check to collect unit-of-work information
config.statement.switch=Collect SQL statements information
config.statement.switch.desc=Check to collect SQL statements information
config.table.switch=Collect table information
config.table.switch.desc=Check to collect table information
config.buffer_pool.switch=Collect buffer pool information
config.buffer_pool.switch.desc=Check to collect buffer pool information
config.lock.switch=Collect locks information
config.lock.switch.desc=Check to collect locks information
config.sort.switch=Collect sorts information
config.sort.switch.desc=Check to collect sorts information
config.timestamp.switch=Collect time information
config.timestamp.switch.desc=Check to collect time information
config.agg_all_nodes=Aggregate data from all nodes
config.agg_all_nodes.desc=Only supported for distributed databases: all performance data will be aggregated across all nodes.
db2.error.internal_agent_error=Internal agent error
db2.error.not_supported=DB2 client not installed properly, or DB2 agent not supported on this platform
db2.error.native=The following problem occured:\n {0}

db2i=DB2 Instance
fcm=FCM
fcm_node=FCM node
appl_info=Info
appl=Application
appl_list=Applications
dcs_appl_info=Info
dcs_appl=DCS application
dcs_stmt=DCS statement
subsection=Subsection
agent=Agent
lock_wait=Lock waiting
dcs_dbase=DCS database
dbase=Database
rollforward=Rollforward
table=Table
lock=Lock
tablespace=Tablespace
bufferpool=Bufferpool
bp_list=Bufferpools
dynsql=Dynamic SQL
collected=System
switch_list=Switches
uow_sw=UOW
statement_sw=Statement
table_sw=Table
buffpool_sw=Bufferpool
lock_sw=Lock
sort_sw=Sort
table_list=Tables
tablespace_list=Tablespaces
dynsql_list=Dynamic SQLs
appl_lock_list=App Locks
db_lock_list=DB Locks
stmt=Statement
dbase_remote=Remote DB
appl_remote=Remote App
appl_id_info=Application ID
stmt_transmissions=Transmissions
timestamp_sw=Timestamp
table_reorg=Table reorg
memory_pool=Memory
tablespace_quiescer=Quiescers
tablespace_container=Containers
tablespace_range=Ranges
tablespace_range_container=Containers
tablespace_nodeinfo=Node Info
health_indicator=Health
health_indicator_hist=Health history
bufferpool_nodeinfo=Node

sqlm_heap_application=Application Heap
sqlm_heap_database=Database Heap
sqlm_heap_appl_control=Application Control Heap
sqlm_heap_lock_mgr=Lock Manager Heap
sqlm_heap_utility=Backup/Restore/Utility Heap
sqlm_heap_statistics=Statistics Heap
sqlm_heap_package_cache=Package Cache Heap
sqlm_heap_cat_cache=Catalog Cache Heap
sqlm_heap_dfm=DFM Heap
sqlm_heap_query=Query Heap
sqlm_heap_monitor=Database Monitor Heap
sqlm_heap_statement=Statement Heap
sqlm_heap_fcmbp=FCMBP Heap
sqlm_heap_import_pool=Import Pool
sqlm_heap_other=Other Memory
sqlm_heap_bp=Buffer Pool Heap
sqlm_heap_app_group=Application Group Shared Heap
sqlm_heap_shared_sort=Sort Shared Heap

db2start_time=Start database manager timestamp
server_nname=Configuration NNAME at monitoring (server) database partition
server_instance_name=Server instance name
server_db2_type=Database manager type at monitored (server) node
server_prdid=Server product/version ID
server_version=Server version
service_level=Service level
server_platform=Server operating system
product_name=Product name
db2_status=Status of DB2 instance
time_zone_disp=Time zone displacement
db_name=Database name
db_path=Database path
db_conn_time=Database activation timestamp
conn_time=Time of database connection
disconn_time=Database deactivation timestamp
db_status=Status of database
catalog_node_name=Catalog node network name
db_location=Database location
catalog_node=Catalog node number
last_backup=Last backup timestamp
agent_id=Application handle (agent ID)
appl_status=Application status
codepage_id=ID of code page used by application
status_change_time=Application status change time
appl_id_oldest_xact=Application with oldest transaction
smallest_log_avail_node=Node with least available log space
appl_name=Application name
appl_id=Application ID
sequence_no=Sequence number
auth_id=Authorization ID
session_auth_id=Session authorization ID
client_nname=Configuration NNAME of client
client_prdid=Client product/version ID
client_db_alias=Database alias used by application
host_prdid=Host product/version ID
outbound_appl_id=Outbound application ID
outbound_sequence_no=Outbound sequence number
execution_id=User login ID
corr_token=DRDA correlation token
client_pid=Client process ID
client_platform=Client operating platform
client_protocol=Client communication protocol
country_code=Database Country Code
territory_code=Database territory code
appl_priority=Application agent priority
appl_priority_type=Application priority type
authority_lvl=User authorization level
node_number=Node number
coord_node=Coordinating node
appl_con_time=Connection request start timestamp
connections_top=Maximum number of concurrent connections
conn_complete_time=Connection request completion timestamp
prev_uow_stop_time=Previous unit of work completion timestamp
uow_start_time=Unit of work start timestamp
uow_stop_time=Unit of work stop timestamp
uow_elapsed_time=Most recent unit of work elapsed time
uow_comp_status=Unit of work completion status
uow_status=Unit of work status
appl_idle_time=Application idle time
agent_pid=Process or thread ID
coord_agent_pid=Coordinator agent
rem_cons_in=Remote connections to database manager
rem_cons_in_exec=Remote connections executing in the database manager
local_cons=Local connections
local_cons_in_exec=Local connections executing in the database manager
con_local_dbases=Local databases with current connects
total_cons=Connects since database activation
appls_cur_cons=Applications connected currently
appls_in_db2=Applications executing in the database currently
agents_registered=Agents registered
agents_waiting_on_token=Agents waiting for a token
agents_registered_top=Maximum number of agents registered
agents_waiting_top=Maximum number of agents waiting
idle_agents=Number of idle agents
agents_from_pool=Agents assigned from pool
agents_created_empty_pool=Agents created due to empty agent pool
coord_agents_top=Maximum number of coordinating agents
agents_stolen=Stolen agents
associated_agents_top=Maximum number of associated agents
comm_private_mem=Committed private memory
total_sec_cons=Secondary connections
num_assoc_agents=Number of associated agents
coord_node_num=Coordinating node
max_agent_overflows=Maximum agent overflows
num_gw_conn_switches=Connection switches
pool_id=Memory pool identifier
pool_cur_size=Current size of memory pool
pool_config_size=Configured size of memory pool
pool_max_size=Maximum size of memory pool
pool_watermark=Memory pool watermark
sort_heap_allocated=Total sort heap allocated
post_threshold_sorts=Post threshold sorts
piped_sorts_requested=Piped sorts requested
piped_sorts_accepted=Piped sorts accepted
total_sorts=Total sorts
total_sort_time=Total sort time
sort_overflows=Sort overflows
active_sorts=Active sorts
sort_heap_top=Sort private heap high water mark
sort_shrheap_allocated=Sort share heap currently allocated
sort_shrheap_top=Sort share heap high water mark
total_hash_joins=Total hash joins
post_threshold_hash_joins=Hash join threshold
total_hash_loops=Total hash loops
hash_join_overflows=Hash join overflows
hash_join_small_overflows=Hash join small overflows
buff_free=FCM buffers currently free
buff_free_bottom=Minimum FCM buffers free
ma_free=Message anchors currently free
ma_free_bottom=Minimum message anchors
ce_free=Connection entries currently free
ce_free_bottom=Minimum connection entries
rb_free=Request blocks currently free
rb_free_bottom=Minimum request blocks
connection_status=Connection status
total_buffers_sent=Total FCM buffers sent
total_buffers_rcvd=Total FCM buffers received
utility_dbname=Database operated on by utility
utility_id=Utility ID
utility_type=Utility type
utility_priority=Utility priority
utility_start_time=Utility start time
utility_description=Utility description
progress_list_current_seq_num=Current progress list sequence number
progress_seq_num=Progress sequence number
progress_description=Progress description
progress_start_time=Progress start time
progress_work_metric=Progress work metric
progress_total_units=Total progress work units
progress_completed_units=Completed progress work units
pool_data_l_reads=Buffer pool data logical reads
pool_temp_data_l_reads=Buffer pool temporary data logical reads
pool_data_p_reads=Buffer pool data physical reads
pool_temp_data_p_reads=Buffer pool temporary data physical reads
pool_data_writes=Buffer pool data writes
pool_index_l_reads=Buffer pool index logical reads
pool_temp_index_l_reads=Buffer pool temporary index logical reads
pool_index_p_reads=Buffer pool index physical reads
pool_temp_index_p_reads=Buffer pool temporary index physical reads
pool_index_writes=Buffer pool index writes
pool_read_time=Total buffer pool physical read time
pool_write_time=Total buffer pool physical write time
files_closed=Database files closed
pool_async_data_reads=Buffer pool asynchronous data reads
pool_async_data_writes=Buffer pool asynchronous data writes
pool_async_index_writes=Buffer pool asynchronous index writes
pool_async_index_reads=Buffer pool asynchronous index reads
pool_async_read_time=Buffer pool asynchronous read time
pool_async_write_time=Buffer pool asynchronous write time
pool_async_data_read_reqs=Buffer pool asynchronous read requests
pool_async_index_read_reqs=Buffer pool asynchronous index read requests
pool_lsn_gap_clns=Buffer pool log space cleaners triggered
pool_drty_pg_steal_clns=Buffer pool victim page cleaners triggered
pool_no_victim_buffer=Buffer pool no victim buffers
pool_drty_pg_thrsh_clns=Buffer pool threshold cleaners triggered
bp_name=Buffer pool name
prefetch_wait_time=Time waited for prefetch
unread_prefetch_pages=Unread prefetch pages
vectored_ios=Number of vectored I/O requests
pages_from_vectored_ios=Total number of pages read by vectored I/O
block_ios=Number of block I/O requests
pages_from_block_ios=Total number of pages read by block I/O
physical_page_maps=Number of physical page maps
pool_data_to_estore=Buffer pool data pages to extended storage
pool_index_to_estore=Buffer pool index pages to extended storage
pool_data_from_estore=Buffer pool data pages from extended storage
pool_index_from_estore=Buffer pool index pages from extended storage
bp_cur_buffsz=Current size of buffer pool
bp_new_buffsz=New buffer pool size
bp_pages_left_to_remove=Number of pages left to remove
bp_tbsp_use_count=Number of table spaces mapped to buffer pool
direct_reads=Direct reads from database
direct_writes=Direct writes to database
direct_read_reqs=Direct read requests
direct_write_reqs=Direct write requests
direct_read_time=Direct read time
direct_write_time=Direct write time
cat_cache_lookups=Catalog cache lookups
cat_cache_inserts=Catalog cache inserts
cat_cache_overflows=Catalog cache overflows
cat_cache_heap_full=Catalog cache full
cat_cache_size_top=Catalog cache high water mark
pkg_cache_lookups=Package cache lookups
pkg_cache_inserts=Package cache inserts
pkg_cache_num_overflows=Package cache overflows
pkg_cache_size_top=Package cache high water mark
appl_section_lookups=Section lookups
appl_section_inserts=Section inserts
shr_workspace_size_top=Maximum shared workspace size
shr_workspace_num_overflows=Shared workspace overflows
shr_workspace_section_lookups=Shared workspace section lookups
shr_workspace_section_inserts=Shared workspace section inserts
priv_workspace_size_top=Maximum private workspace size
priv_workspace_num_overflows=Private workspace overflows
priv_workspace_section_lookups=Private workspace section lookups
priv_workspace_section_inserts=Private workspace section inserts
db_heap_top=Maximum database heap allocated
sec_log_used_top=Maximum secondary log space used
tot_log_used_top=Maximum total log space used
sec_logs_allocated=Secondary logs allocated currently
log_reads=Number of log pages read
log_writes=Number of log pages written
uow_log_space_used=Unit of work log space used
total_log_used=Total log space used
total_log_available=Total log available
log_held_by_dirty_pages=Amount of log space accounted for by dirty pages
log_to_redo_for_recovery=Amount of log to be redone for recovery
log_write_time=Log write time
log_read_time=Log read time
num_log_write_io=Number of log writes
num_log_read_io=Number of log reads
num_log_part_page_io=Number of partial log page writes
num_log_buffer_full=Number of full log buffers
num_log_data_found_in_buffer=Number of log data found in buffer
first_active_log=First active log file number
last_active_log=Last active log file number
current_active_log=Current active log file number
current_archive_log=Current archive log file number
locks_held=Locks held
lock_list_in_use=Total lock list memory in use
deadlocks=Deadlocks detected
lock_escals=Number of lock escalations
x_lock_escals=Exclusive lock escalations
lock_mode=Lock mode
lock_status=Lock status
lock_object_type=Lock object type waited on
lock_object_name=Lock object name
lock_node=Lock node
lock_timeouts=Number of lock timeouts
locks_held_top=Maximum number of locks held
dl_conns=Connections involved in deadlock
lock_escalation=Lock escalation
lock_mode_requested=Lock mode requested
deadlock_id=Deadlock event identifier
deadlock_node=Partition number where deadlock occurred
participant_no=Participant within deadlock
participant_no_holding_lk=Participant holding a lock on the object required by application
rolled_back_participant_no=Rolled back application participant
locks_in_list=Number of locks reported
lock_name=Lock name
lock_attributes=Lock attributes
lock_release_flags=Lock release flags
lock_count=Lock count
lock_hold_count=Lock hold count
lock_current_mode=Original lock mode before conversion
num_indoubt_trans=Number of indoubt transactions
lock_waits=Lock waits
lock_wait_time=Time waited on locks
locks_waiting=Current agents waiting on locks
uow_lock_wait_time=Total time unit of work waited on locks
lock_wait_start_time=Lock wait start timestamp
lock_timeout_val=Lock timeout (seconds)
agent_id_holding_lock=Agent ID holding lock
appl_id_holding_lk=Application ID holding lock
sequence_no_holding_lk=Sequence number holding lock
rolled_back_appl_id=Rolled back application
rolled_back_agent_id=Rolled back agent
rolled_back_sequence_no=Rolled back sequence number
rf_timestamp=Rollforward timestamp
ts_name=Table space being rolled forward
rf_type=Rollforward type
rf_log_num=Log being rolled forward
rf_status=Log phase
tablespace_id=Table space identification
tablespace_name=Table space name
tablespace_type=Table space type
tablespace_content_type=Table space contents type
tablespace_state=Table space state
tablespace_page_size=Table space page size
tablespace_extent_size=Table space extent size
tablespace_prefetch_size=Table space prefetch size
tablespace_cur_pool_id=Buffer pool currently being used
tablespace_next_pool_id=Buffer pool that will be used at next startup
tablespace_total_pages=Total pages in table space
tablespace_usable_pages=Usable pages in table space
tablespace_used_pages=Used pages in table space
tablespace_free_pages=Free pages in table space
tablespace_pending_free_pages=Pending free pages in table space
tablespace_page_top=Table space high water mark
tablespace_rebalancer_mode=Rebalancer mode
tablespace_rebalancer_start_time=Rebalancer start time
tablespace_rebalancer_restart_time=Rebalancer restart time
tablespace_rebalancer_extents_remaining=Total number of extents to be processed by the rebalancer
tablespace_rebalancer_extents_processed=Number of extents the rebalancer has processed
tablespace_rebalancer_last_extent_moved=Last extent moved by the rebalancer
tablespace_rebalancer_priority=Current rebalancer priority
tablespace_num_quiescers=Number of quiescers
quiescer_auth_id=Quiescer user authorization identification
quiescer_agent_id=Quiescer agent identification
quiescer_ts_id=Quiescer table space identification
quiescer_obj_id=Quiescer object identification
quiescer_state=Quiescer state
tablespace_state_change_object_id=State change object identification
tablespace_state_change_ts_id=State change table space identification
tablespace_min_recovery_time=Minimum recovery time for rollforward
tablespace_num_containers=Number of containers in table space
container_id=Container identification
container_name=Container name
container_type=Container type
container_total_pages=Total pages in container
container_usable_pages=Usable pages in container
container_stripe_set=Stripe set
container_accessible=Accessibility of container
tablespace_num_ranges=Number of ranges in the table space map
range_stripe_set_number=Stripe set number
range_number=Range number
range_max_page_number=Maximum page in range
range_max_extent=Maximum extent in range
range_start_stripe=Start stripe
range_end_stripe=End stripe
range_adjustment=Range adjustment
range_num_containers=Number of containers in range
range_container_id=Range container
range_offset=Range offset
fs_caching=File system caching
table_type=Table type
table_name=Table name
table_schema=Table schema name
rows_deleted=Rows deleted
rows_inserted=Rows inserted
rows_updated=Rows updated
rows_selected=Rows selected
rows_written=Rows written
rows_read=Rows read
overflow_accesses=Accesses to overflowed records
int_rows_deleted=Internal rows deleted
int_rows_updated=Internal rows updated
int_rows_inserted=Internal rows inserted
table_file_id=Table file identification
page_reorgs=Page reorganizations
data_object_pages=Data object pages
index_object_pages=Index object pages
lob_object_pages=LOB object pages
long_object_pages=Long object pages
reorg_type=Table reorganize attributes
reorg_status=Table reorganize status
reorg_phase=Table reorganize phase
reorg_phase_start=Table reorganize phase start time
reorg_max_phase=Maximum table reorganize phase
reorg_current_counter=Table reorganize progress
reorg_max_counter=Total amount of table reorganization
reorg_completion=Table reorganization completion flag
reorg_start=Table reorganize start time
reorg_end=Table reorganize end time
reorg_index_id=Index used to reorganize the table
reorg_tbspc_id=Table space where table is reorganized
open_rem_curs=Open remote cursors
open_rem_curs_blk=Open remote cursors with blocking
rej_curs_blk=Rejected block cursor requests
acc_curs_blk=Accepted block cursor requests
open_loc_curs=Open local cursors
open_loc_curs_blk=Open local cursors with blocking
static_sql_stmts=Static SQL statements attempted
dynamic_sql_stmts=Dynamic SQL statements attempted
failed_sql_stmts=Failed statement operations
commit_sql_stmts=Commit statements attempted
rollback_sql_stmts=Rollback statements attempted
select_sql_stmts=Select SQL statements executed
uid_sql_stmts=UPDATE/INSERT/DELETE SQL statements executed
ddl_sql_stmts=Data definition language (DDL) SQL statements
int_auto_rebinds=Internal automatic rebinds
int_commits=Internal commits
int_rollbacks=Internal rollbacks
int_deadlock_rollbacks=Internal rollbacks due to deadlock
sql_reqs_since_commit=SQL requests since last commit
stmt_node_number=Statement node
binds_precompiles=Binds/precompiles attempted
stmt_type=Statement type
stmt_operation=Statement operation
package_name=Package name
consistency_token=Package consistency token
package_version_id=Package version
section_number=Section number
cursor_name=Cursor name
creator=Application creator
stmt_start=Statement operation start timestamp
stmt_stop=Statement operation stop timestamp
stop_time=Event stop time
start_time=Event start time
stmt_elapsed_time=Most recent statement elapsed time
stmt_text=SQL dynamic statement text
stmt_sorts=Statement sorts
fetch_count=Number of successful fetches
sqlca=SQL Communications Area (SQLCA)
query_card_estimate=Query number of rows estimate
query_cost_estimate=Query cost estimate
ss_number=Subsection number
ss_node_number=Subsection node number
ss_status=Subsection status
ss_exec_time=Subsection execution elapsed time
tq_wait_for_any=Waiting for any node to send on a table queue
tq_node_waited_for=Waited for node on a table queue
tq_tot_send_spills=Total number of table queue buffers overflowed
tq_cur_send_spills=Current number of table queue buffers overflowed
tq_rows_read=Number of rows read from table queues
tq_rows_written=Number of rows written to table queues
tq_max_send_spills=Maximum number of table queue buffers overflows
tq_id_waiting_on=Waited on node on a table queue
num_executions=Statement executions
num_compilations=Statement compilations
prep_time_worst=Statement worst preparation time
prep_time_best=Statement best preparation time
total_exec_time=Elapsed statement execution time
num_agents=Number of agents working on a statement
agents_top=Number of agents created
degree_parallelism=Degree of parallelism
agent_usr_cpu_time=User CPU time used by agent
agent_sys_cpu_time=System CPU time used by agent
stmt_usr_cpu_time=User CPU time used by statement
stmt_sys_cpu_time=System CPU time used by statement
user_cpu_time=User CPU time
system_cpu_time=System CPU time
ss_usr_cpu_time=User CPU time used by subsection
ss_sys_cpu_time=System CPU time used by subsection
total_sys_cpu_time=Total system CPU for a statement
total_usr_cpu_time=Total user CPU for a statement
last_reset=Last reset timestamp
input_db_alias=Input database alias
time_stamp=Snapshot time
num_nodes_in_db2_instance=Number of nodes in partition
count=Number of event monitor overflows
first_overflow_time=Time of first event overflow
last_overflow_time=Time of last event overflow
byte_order=Byte order of event data
version=Version of monitor data
event_monitor_name=Event monitor name
partial_record=Partial record
event_time=Event time
evmon_flushes=Number of event monitor flushes
evmon_activates=Number of event monitor activations
sql_req_id=Request identifier for SQL statement
message=Control table message
message_time=Timestamp control table message
partition_number=Partition number
hadr_role=HADR role
hadr_state=HADR state
hadr_syncmode=HADR synchronization mode
hadr_connect_status=HADR connection status
hadr_connect_time=HADR connection time
hadr_heartbeat=HADR heartbeat
hadr_local_host=HADR local host
hadr_local_service=HADR local service
hadr_remote_host=HADR remote host
hadr_remote_service=HADR remote service
hadr_remote_instance=HADR remote instance
hadr_timeout=HADR timeout
hadr_primary_log_file=HADR primary log file
hadr_primary_log_page=HADR primary log page
hadr_primary_log_lsn=HADR primary log LSN
hadr_standby_log_file=HADR standby log file
hadr_standby_log_page=HADR standby log page
hadr_standby_log_lsn=HADR standby log LSN
hadr_log_gap=HADR log gap
dcs_db_name=DCS database name
host_db_name=Host database name
gw_db_alias=Database alias at the gateway
gw_con_time=DB2 Connect gateway first connect initiated
gw_connections_top=Maximum number of concurrent connections to host database
gw_total_cons=Total number of attempted connections for DB2 Connect
gw_cur_cons=Current number of connections for DB2 Connect
gw_cons_wait_host=Number of connections waiting for the host to reply
gw_cons_wait_client=Number of connections waiting for the client to send request
gw_exec_time=Elapsed time spent on DB2 Connect gateway processing
sql_stmts=Number of SQL statements attempted
sql_chains=Number of SQL chains attempted
open_cursors=Number of open cursors
dcs_appl_status=DCS application status
agent_status=DCS application agents
host_ccsid=Host coded character set ID
outbound_comm_protocol=Outbound communication protocol
outbound_comm_address=Outbound communication address
inbound_comm_address=Inbound communication address
inbound_bytes_received=Inbound number of bytes received
outbound_bytes_sent=Outbound number of bytes sent
outbound_bytes_received=Outbound number of bytes received
inbound_bytes_sent=Inbound number of bytes sent
outbound_bytes_sent_top=Maximum outbound number of bytes sent
outbound_bytes_received_top=Maximum outbound number of bytes received
outbound_bytes_sent_bottom=Minimum outbound number of bytes sent
outbound_bytes_received_bottom=Minimum outbound number of bytes received
max_data_sent_128=Number of statements with outbound bytes sent between 1 and 128 bytes
max_data_received_128=Number of statements with outbound bytes received between 1 and 128 bytes
max_data_sent_256=Number of statements with outbound bytes sent between 129 and 256 bytes
max_data_received_256=Number of statements with outbound bytes received between 129 and 256 bytes
max_data_sent_512=Number of statements with outbound bytes sent between 257 and 512 bytes
max_data_received_512=Number of statements with outbound bytes received between 257 and 512 bytes
max_data_sent_1024=Number of statements with outbound bytes sent between 513 and 1024 bytes
max_data_received_1024=Number of statements with outbound bytes received between 513 and 1024 bytes
max_data_sent_2048=Number of statements with outbound bytes sent between 1025 and 2048 bytes
max_data_received_2048=Number of statements with outbound bytes received between 1025 and 2048 bytes
max_data_sent_4096=Number of statements with outbound bytes sent between 2049 and 4096 bytes
max_data_received_4096=Number of statements with outbound bytes received between 2049 and 4096 bytes
max_data_sent_8192=Number of statements with outbound bytes sent between 4097 and 8192 bytes
max_data_received_8192=Number of statements with outbound bytes received between 4097 and 8192 bytes
max_data_sent_16384=Number of statements with outbound bytes sent between 8193 and 16384 bytes
max_data_received_16384=Number of statements with outbound bytes received between 8193 and 16384 bytes
max_data_sent_31999=Number of statements with outbound bytes sent between 16385 and 31999 bytes
max_data_received_31999=Number of statements with outbound bytes received between 16385 and 31999 bytes
max_data_sent_64000=Number of statements with outbound bytes sent between 32000 and 64000 bytes
max_data_received_64000=Number of statements with outbound bytes received between 32000 and 64000 bytes
max_data_sent_gt64000=Number of statements with outbound bytes sent greater than 64000 bytes
max_data_received_gt64000=Number of statements with outbound bytes received greater than 64000 bytes
max_network_time_1_ms=Number of statements with network time of up to 1 ms
max_network_time_4_ms=Number of statements with network time between 1 and 4 ms
max_network_time_16_ms=Number of statements with network time between 4 and 16 ms
max_network_time_100_ms=Number of statements with network time between 16 and 100 ms
max_network_time_500_ms=Number of statements with network time between 100 and 500 ms
max_network_time_gt500_ms=Number of statements with network time greater than 500 ms
network_time_top=Maximum network time for statement
network_time_bottom=Minimum network time for statement
xid=Transaction ID
elapsed_exec_time=Statement execution elapsed time
host_response_time=Host response time
num_transmissions=Number of transmissions
num_transmissions_group=Number of transmissions group
con_response_time=Most recent response time for connect
con_elapsed_time=Most recent connection elapsed time
gw_comm_errors=Communication errors
gw_comm_error_time=Communication error time
blocking_cursor=Blocking cursor
tpmon_client_userid=TP monitor client user ID
tpmon_client_wkstn=TP monitor client workstation name
tpmon_client_app=TP monitor client application name
tpmon_acc_str=TP monitor client accounting string
datasource_name=Data source name
disconnects=Disconnects
insert_sql_stmts=Inserts
update_sql_stmts=Updates
delete_sql_stmts=Deletes
create_nickname=Create nicknames
passthrus=Pass-through
stored_procs=Stored procedures
remote_locks=Remote locks
sp_rows_selected=Rows returned by stored procedures
select_time=Query response time
insert_time=Insert response time
update_time=Update response time
delete_time=Delete response time
create_nickname_time=Create nickname response time
passthru_time=Pass-through time
stored_proc_time=Stored procedure time
remote_lock_time=Remote lock time

db2start_time.desc=The date and time that the database manager was started using the db2start command. 
server_nname.desc=The name of the database partition being monitored by the database system monitor. 
server_instance_name.desc=The name of the database manager instance for which the snapshot was taken. 
server_db2_type.desc=Identifies the type of database manager being monitored. 
server_prdid.desc=The product and version that is running on the server. 
server_version.desc=The version of the server returning the information. 
service_level.desc=This is the current corrective service level of the DB2 instance. 
server_platform.desc=The operating system running the database server. 
product_name.desc=Details of the version of the DB2 instance that is running. 
db2_status.desc=The current status of the instance of the database manager. 
time_zone_disp.desc=Number of seconds that the local time zone is displaced from Greenwich Mean Time (GMT). 
db_name.desc=The real name of the database for which information is collected or to which the application is connected. This is the name the database was given when created. 
db_path.desc=The full path of the location where the database is stored on the monitored system. 
db_conn_time.desc=The date and time of the connection to the database (at the database level, this is the first connection to the database), or when the activate database was issued. 
conn_time.desc=The date and time of the connection to the database (at the database level, this is the first connection to the database), or when the activate database was issued. 
disconn_time.desc=The date and time that the application disconnected from the database (at the database level, this is the time the last application disconnected). 
db_status.desc=The current status of the database. 
catalog_node_name.desc=The network name of the catalog node. 
db_location.desc=The location of the database in relation to the application. 
catalog_node.desc=The node number of the node where the database catalog tables are stored. 
last_backup.desc=The date and time that the latest database backup was completed. 
agent_id.desc=A system-wide unique ID for the application. On a single-partitioned database, this identifier consists of a 16 bit counter. On a multi-partitioned database, this identifier consists of the coordinating partition number concatenated with a 16 bit counter. In addition, this identifier will be the same on every partition where the application may make a secondary connection. 
appl_status.desc=The current status of the application. 
codepage_id.desc=The code page identifier. 
status_change_time.desc=The date and time the application entered its current status. 
appl_id_oldest_xact.desc=The application ID (which corresponds to the agent_id value from the application snapshot) of the application that has the oldest transaction. 
smallest_log_avail_node.desc=This element is only returned for global snapshots and indicates the node with the least amount (in bytes) of available log space. 
appl_name.desc=The name of the application running at the client, as known to the database or DB2 Connect server. 
appl_id.desc=This identifier is generated when the application connects to the database at the database manager or when DDCS receives a request to connect to a DRDA database. 
sequence_no.desc=This identifier is incremented whenever a unit of work ends (that is, when a COMMIT or ROLLBACK terminates a unit of work). Together, the appl_id and sequence_no uniquely identify a transaction. 
auth_id.desc=The authorization ID of the user who invoked the application that is being monitored. On a DB2 Connect gateway node, this is the user's authorization ID on the host. 
session_auth_id.desc=The current authorization ID for the session being used by this application.
client_nname.desc=The nname in the database manager configuration file at the client database partition. 
client_prdid.desc=The product and version that is running on the client. 
client_db_alias.desc=The alias of the database provided by the application to connect to the database. 
host_prdid.desc=The product and version that is running on the server. 
outbound_appl_id.desc=This identifier is generated when the application connects to the DRDA host database. It is used to connect the DB2 Connect gateway to the host, while the appl_id is used to connect a client to the DB2 Connect gateway. 
outbound_sequence_no.desc=This element will be blank when the gateway concentrator is on, or if the DCS application is not in a logical unit of work.
execution_id.desc=The ID that the user specified when logging in to the operating system. This ID is distinct from auth_id, which the user specifies when connecting to the database. 
corr_token.desc=The DRDA AS correlation token. 
client_pid.desc=The process ID of the client application that made the connection to the database. 
client_platform.desc=The operating system on which the client application is running. 
client_protocol.desc=The communication protocol that the client application is using to communicate with the server. 
country_code.desc=The country code of the database for which the monitor data is collected.
territory_code.desc=The territory code of the database for which the monitor data is collected. This monitor element was formerly known as country_code. 
appl_priority.desc=The priority of the agents working for this application. 
appl_priority_type.desc=Operating system priority type for the agent working on behalf of the application. 
authority_lvl.desc=The highest authority level granted to an application. 
node_number.desc=The number assigned to the node in the db2nodes.cfg file. 
coord_node.desc=In a multi-node system, the node number of the node where the application connected or attached to the instance. 
appl_con_time.desc=The date and time that an application started a connection request. 
connections_top.desc=The highest number of simultaneous connections to the database since the database was activated. 
conn_complete_time.desc=The date and time that a connection request was granted. 
prev_uow_stop_time.desc=This is the time the unit of work completed. 
uow_start_time.desc=The date and time that the unit of work first required database resources. 
uow_stop_time.desc=The date and time that the most recent unit of work completed, which occurs when database changes are committed or rolled back. 
uow_elapsed_time.desc=The elapsed execution time of the most recently completed unit of work. 
uow_comp_status.desc=The status of the unit of work and how it stopped. 
uow_status.desc=The status of the unit of work. 
appl_idle_time.desc=Number of seconds since an application has issued any requests to the server. This includes applications that have not terminated a transaction, for example not issued a commit or rollback. 
agent_pid.desc=The process Id (UNIX systems) or thread Id (Windows systems) of a DB2 agent. 
coord_agent_pid.desc=The process Id (UNIX systems) or thread Id (Windows systems) of the coordinator agent for the application. 
rem_cons_in.desc=The current number of connections initiated from remote clients to the instance of the database manager that is being monitored. 
rem_cons_in_exec.desc=The number of remote applications that are currently connected to a database and are currently processing a unit of work within the database manager instance being monitored. 
local_cons.desc=The number of local applications that are currently connected to a database within the database manager instance being monitored. 
local_cons_in_exec.desc=The number of local applications that are currently connected to a database within the database manager instance being monitored and are currently processing a unit of work. 
con_local_dbases.desc=The number of local databases that have applications connected. 
total_cons.desc=Indicates the number of connections to the database since the first connect, activate, or last reset (coordinator agents). 
appls_cur_cons.desc=Indicates the number of applications that are currently connected to the database. 
appls_in_db2.desc=Indicates the number of applications that are currently connected to the database, and for which the database manager is currently processing a request. 
agents_registered.desc=The number of agents registered in the database manager instance that is being monitored (coordinator agents and subagents). 
agents_waiting_on_token.desc=The number of agents waiting for a token so they can execute a transaction in the database manager. 
agents_registered_top.desc=The maximum number of agents that the database manager has ever registered, at the same time, since it was started (coordinator agents and subagents). 
agents_waiting_top.desc=The maximum number of agents that have ever been waiting for a token, at the same time, since the database manager was started. 
idle_agents.desc=The number of agents in the agent pool that are currently unassigned to an application and are, therefore, "idle". 
agents_from_pool.desc=The number of agents assigned from the agent pool. 
agents_created_empty_pool.desc=The number of agents created because the agent pool was empty. It includes the number of agents started at DB2 start up ( num_initagents) . 
coord_agents_top.desc=The maximum number of coordinating agents working at one time. 
agents_stolen.desc=The number of times that agents are stolen from an application. Agents are stolen when an idle agent associated with an application is reassigned to work on a different application. 
associated_agents_top.desc=The maximum number of subagents associated with this application. 
comm_private_mem.desc=The amount of private memory that the instance of the database manager has currently committed at the time of the snapshot. 
total_sec_cons.desc=The number of connections made by a subagent to the database at the node. 
num_assoc_agents.desc=At the application level, this is the number of subagents associated with an application. At the database level, it is the number of subagents for all applications. 
coord_node_num.desc=In a multi-node system, the node number of the node where the application connected or attached to the instance.
max_agent_overflows.desc=The number of times a request to create a new agent was received when the maxagents configuration parameter had already been reached. 
num_gw_conn_switches.desc=The number of times that an agent from the agents pool was primed with a connection and was stolen for use with a different DRDA database.
pool_id.desc=The type of memory pool. 
pool_cur_size.desc=The current size of a memory pool. 
pool_config_size.desc=The internally configured size of a memory pool in DB2 UDB. 
pool_max_size.desc=The maximum allowed size of a memory pool
pool_watermark.desc=The largest size of a memory pool since its creation. 
sort_heap_allocated.desc=The total number of allocated pages of sort heap space for all sorts at the level chosen and at the time the snapshot was taken. 
post_threshold_sorts.desc=The number of sorts that have requested heaps after the sort heap threshold has been exceeded. 
piped_sorts_requested.desc=The number of piped sorts that have been requested. 
piped_sorts_accepted.desc=The number of piped sorts that have been accepted. 
total_sorts.desc=The total number of sorts that have been executed. 
total_sort_time.desc=The total elapsed time (in milliseconds) for all sorts that have been executed. 
sort_overflows.desc=The total number of sorts that ran out of sort heap and may have required disk space for temporary storage. 
active_sorts.desc=The number of sorts in the database that currently have a sort heap allocated. 
sort_heap_top.desc=The private sort memory high-water mark across the database manager. 
sort_shrheap_allocated.desc=Total amount of shared sort memory allocated in the database. 
sort_shrheap_top.desc=Database-wide shared sort memory high-water mark. 
total_hash_joins.desc=The total number of hash joins executed. 
post_threshold_hash_joins.desc=The total number of times that a hash join heap request was limited due to concurrent use of shared or private sort heap space. 
total_hash_loops.desc=The total number of times that a single partition of a hash join was larger than the available sort heap space. 
hash_join_overflows.desc=The number of times that hash join data exceeded the available sort heap space. 
hash_join_small_overflows.desc=The number of times that hash join data exceeded the available sort heap space by less than 10%. 
buff_free.desc=This element indicates the number of FCM buffers currently free. 
buff_free_bottom.desc=The lowest number of free FCM buffers reached during processing. 
ma_free.desc=This element indicates the number of message anchors currently free. 
ma_free_bottom.desc=The lowest number of free message anchors reached during processing. 
ce_free.desc=This element indicates the number of connection entries currently free. 
ce_free_bottom.desc=The lowest number of free connection entries reached during processing. 
rb_free.desc=This element indicates the number of request blocks currently free. 
rb_free_bottom.desc=The lowest number of free request blocks reached during processing. 
connection_status.desc=This element indicates the status of the communication connection status between the node issuing the GET SNAPSHOT command and other nodes listed in the db2nodes.cfg file. 
total_buffers_sent.desc=The total number of FCM buffers that have been sent from the node issuing the GET SNAPSHOT command to the node identified by the node_number (see the db2nodes.cfg file). 
total_buffers_rcvd.desc=The total number of FCM buffers received by the node issuing the GET SNAPSHOT command from the node identified by the node_number (see the db2nodes.cfg file). 
utility_dbname.desc=The database operated on by the utility.
utility_id.desc=The unique identifier corresponding to the utility invocation. 
utility_type.desc=The class of utility.
utility_priority.desc=Utility priority specifies the amount of relative importance of a throttled utility with respect to its throttled peers. A priority of 0 implies that a utility is executing unthrottled. Non-zero priorities must fall in the range of 1-100, with 100 representing the highest priority and 1 representing the lowest.
utility_start_time.desc=The date and time when the current utility was originally invoked.
utility_description.desc=A brief description of the work a utility is performing. For example, a rebalance invocation may contain "Tablespace ID: 2" representing that this rebalancer is working on tablespace with ID 2. The format of this field is dependent on the class of utility and is subject to change between releases.
progress_list_current_seq_num.desc=If the utility contains multiple sequential phases, then this element displays the number of the current phase.
progress_seq_num.desc=Phase number.
progress_description.desc=Describes the phase of work.
progress_start_time.desc=A timestamp representing the start of the phase.
progress_work_metric.desc=The metric for interpreting the progress_total_units and progress_completed_units elements.
progress_total_units.desc=Total amount of work to perform in order for the phase to be complete. Some utilities might not be able to quantify the total work so they will continuously update this element. Other utilities might not be able to provide an estimate for the total work so this element might be omitted entirely.
progress_completed_units.desc=The number of work units for the current phase which have been completed. The value of this element will typically increase as the utility operates. This element will always be less than or equal to progress_total_units (if both elements are defined).
pool_data_l_reads.desc=Indicates the number of logical read requests for data pages that have gone through the buffer pool. 
pool_temp_data_l_reads.desc=Indicates the number of logical read requests that required I/O to get data pages into the temporary tablespace.
pool_data_p_reads.desc=The number of read requests that required I/O to get data pages into the buffer pool. 
pool_temp_data_p_reads.desc=The number of physical read requests that required I/O to get data pages into the temporary tablespace.
pool_data_writes.desc=Indicates the number of times a buffer pool data page was physically written to disk. 
pool_index_l_reads.desc=Indicates the number of logical read requests for index pages that have gone through the buffer pool. 
pool_temp_index_l_reads.desc=Indicates the number of logical read requests that required I/O to get index pages into the temporary tablespace. 
pool_index_p_reads.desc=Indicates the number of physical read requests to get index pages into the buffer pool. 
pool_temp_index_p_reads.desc=Indicates the number of physical read requests that required I/O to get index pages into the temporary tablespace.
pool_index_writes.desc=Indicates the number of times a buffer pool index page was physically written to disk. 
pool_read_time.desc=Provides the total amount of elapsed time spent processing read requests that caused data or index pages to be physically read from disk to buffer pool. Elapsed time is given in microseconds. 
pool_write_time.desc=Provides the total amount of time spent physically writing data or index pages from the buffer pool to disk. Elapsed time is given in microseconds. 
files_closed.desc=The total number of database files closed. 
pool_async_data_reads.desc=The number of pages read asynchronously into the buffer pool. 
pool_async_data_writes.desc=The number of times a buffer pool data page was physically written to disk by either an asynchronous page cleaner, or a prefetcher. A prefetcher may have written dirty pages to disk to make space for the pages being prefetched. 
pool_async_index_writes.desc=The number of times a buffer pool index page was physically written to disk by either an asynchronous page cleaner, or a prefetcher. A prefetcher may have written dirty pages to disk to make space for the pages being prefetched. 
pool_async_index_reads.desc=The number of index pages read asynchronously into the buffer pool by a prefetcher. 
pool_async_read_time.desc=The total elapsed time spent reading by database manager prefetchers. 
pool_async_write_time.desc=The total elapsed time spent writing data or index pages from the buffer pool to disk by database manager page cleaners. 
pool_async_data_read_reqs.desc=The number of asynchronous read requests. 
pool_async_index_read_reqs.desc=The number of asynchronous read requests for index pages.
pool_lsn_gap_clns.desc=The number of times a page cleaner was invoked because the logging space used had reached a predefined criterion for the database. 
pool_drty_pg_steal_clns.desc=The number of times a page cleaner was invoked because a synchronous write was needed during the victim buffer replacement for the database. 
pool_no_victim_buffer.desc=Number of times an agent did not have a preselected victim buffer available.
pool_drty_pg_thrsh_clns.desc=The number of times a page cleaner was invoked because a buffer pool had reached the dirty page threshold criterion for the database. 
bp_name.desc=The name of the buffer pool. 
prefetch_wait_time.desc=The time an application spent waiting for an I/O server (prefetcher) to finish loading pages into the buffer pool. 
unread_prefetch_pages.desc=Indicates the number of pages that the prefetcher read in that were never used.
vectored_ios.desc=The number of vectored I/O requests. More specifically, the number of times DB2 performs sequential prefetching of pages into the page area of the buffer pool. 
pages_from_vectored_ios.desc=The total number of pages read by vectored I/O into the page area of the buffer pool. 
block_ios.desc=The number of block I/O requests. More specifically, the number of times DB2 performs sequential prefetching of pages into the block area of the buffer pool. 
pages_from_block_ios.desc=The total number of pages read by block I/O into the block area of the buffer pool. 
physical_page_maps.desc=The number of physical page maps. 
pool_data_to_estore.desc=Number of buffer pool data pages copied to extended storage. 
pool_index_to_estore.desc=Number of buffer pool index pages copied to extended storage. 
pool_data_from_estore.desc=Number of buffer pool data pages copied from extended storage. 
pool_index_from_estore.desc=Number of buffer pool index pages copied from extended storage. 
bp_cur_buffsz.desc=Current buffer pool size. 
bp_new_buffsz.desc=The size the buffer pool will be changed to once the database is restarted. When the ALTER BUFFERPOOL statement is executed as DEFERRED, the buffer pool size is not changed until the database is stopped and restarted. 
bp_pages_left_to_remove.desc=The number of pages left to remove from the buffer pool before the buffer pool resize is completed. This applies only to buffer pool resize operations invoked by ALTER BUFFERPOOL statements executed as IMMEDIATE. 
bp_tbsp_use_count.desc=The number of table spaces using this buffer pool. 
direct_reads.desc=The number of read operations that do not use the buffer pool. 
direct_writes.desc=The number of write operations that do not use the buffer pool. 
direct_read_reqs.desc=The number of requests to perform a direct read of one or more sectors of data. 
direct_write_reqs.desc=The number of requests to perform a direct write of one or more sectors of data. 
direct_read_time.desc=The elapsed time (in milliseconds) required to perform the direct reads. 
direct_write_time.desc=The elapsed time (in milliseconds) required to perform the direct writes. 
cat_cache_lookups.desc=The number of times that the catalog cache was referenced to obtain table descriptor information or authorization information. 
cat_cache_inserts.desc=The number of times that the system tried to insert table descriptor or authorization information into the catalog cache. 
cat_cache_overflows.desc=The number of times that the catalog cache overflowed the bounds of its allocated memory. 
cat_cache_heap_full.desc=The number of times an insert into the catalog failed due to a database heap-full condition.
cat_cache_size_top.desc=The largest size reached by the catalog cache. 
pkg_cache_lookups.desc=The number of times that an application looked for a section or package in the package cache. At a database level, it indicates the overall number of references since the database was started, or monitor data was reset. 
pkg_cache_inserts.desc=The total number of times that a requested section was not available for use and had to be loaded into the package cache. This count includes any implicit prepares performed by the system. 
pkg_cache_num_overflows.desc=The number of times that the package cache overflowed the bounds of its allocated memory. 
pkg_cache_size_top.desc=The largest size reached by the package cache. 
appl_section_lookups.desc=Lookups of SQL sections by an application from its SQL work area. 
appl_section_inserts.desc=Inserts of SQL sections by an application from its SQL work area. 
shr_workspace_size_top.desc=The largest size reached by shared workspaces. 
shr_workspace_num_overflows.desc=The number of times that shared workspaces overflowed the bounds of their allocated memory. 
shr_workspace_section_lookups.desc=Lookups of SQL sections by applications in shared workspaces. 
shr_workspace_section_inserts.desc=Number of inserts of SQL sections by applications into shared workspaces. 
priv_workspace_size_top.desc=The largest size reached by the Private Workspace. 
priv_workspace_num_overflows.desc=The number of times that the private workspaces overflowed the bounds of its allocated memory. 
priv_workspace_section_lookups.desc=Lookups of SQL sections by an application in its agents' private workspace. 
priv_workspace_section_inserts.desc=Inserts of SQL sections by an application into the private workspace. 
db_heap_top.desc=This element is being maintained for DB2 version compatibility. It now measures memory usage, but not exclusively usage by the database heap. 
sec_log_used_top.desc=The maximum amount of secondary log space used (in bytes). 
tot_log_used_top.desc=The maximum amount of total log space used (in bytes). 
sec_logs_allocated.desc=The total number of secondary log files that are currently being used for the database. 
log_reads.desc=The number of log pages read from disk by the logger. 
log_writes.desc=The number of log pages written to disk by the logger. 
uow_log_space_used.desc=The amount of log space (in bytes) used in the current unit of work of the monitored application. 
total_log_used.desc=The total amount of active log space currently used (in bytes) in the database. 
total_log_available.desc=The amount of active log space in the database that is not being used by uncommitted transactions (in bytes). 
log_held_by_dirty_pages.desc=The amount of log (in bytes) corresponding to the difference between the oldest dirty page in the database and the top of the active log.
log_to_redo_for_recovery.desc=The amount of log (in bytes) that will have to be redone for crash recovery.
log_write_time.desc=The total elapsed time spent by the logger writing log data to the disk.
log_read_time.desc=The total elapsed time spent by the logger reading log data from the disk. 
num_log_write_io.desc=The number of I/O requests issued by the logger for writing log data to the disk.
num_log_read_io.desc=The number of I/O requests issued by the logger for reading log data from the disk.
num_log_part_page_io.desc=The number of I/O requests issued by the logger for writing partial log data to the disk.
num_log_buffer_full.desc=The number of times agents have to wait for log data to write to disk while copying log records into the log buffer. This value is incremented per agent per incident. For example, if two agents attempt to copy log data while the buffer is full, then this value is incremented by two. 
num_log_data_found_in_buffer.desc=The number of times an agent reads log data from the buffer.
first_active_log.desc=The file number of the first active log file.
last_active_log.desc=The file number of the last active log file.
current_active_log.desc=The file number of the active log file DB2 UDB is currently writing.
current_archive_log.desc=The file number of the log file DB2 UDB is currently archiving.
locks_held.desc=The number of locks currently held. 
lock_list_in_use.desc=The total amount of lock list memory (in bytes) that is in use. 
deadlocks.desc=The total number of deadlocks that have occurred. 
lock_escals.desc=The number of times that locks have been escalated from several row locks to a table lock. 
x_lock_escals.desc=The number of times that locks have been escalated from several row locks to one exclusive table lock, or the number of times an exclusive lock on a row caused the table lock to become an exclusive lock. 
lock_mode.desc=The type of lock being held. 
lock_status.desc=Indicates the internal status of the lock. 
lock_object_type.desc=The type of object against which the application holds a lock (for object-lock-level information), or the type of object for which the application is waiting to obtain a lock (for application-level and deadlock-level information). 
lock_object_name.desc=This element is provided for informational purposes only. It is the name of the object for which the application holds a lock (for object-lock-level information), or the name of the object for which the application is waiting to obtain a lock (for application-level and deadlock-level information). 
lock_node.desc=The node involved in a lock. 
lock_timeouts.desc=The number of times that a request to lock an object timed-out instead of being granted. 
locks_held_top.desc=The maximum number of locks held during this transaction. 
dl_conns.desc=The number of connections that are involved in the deadlock. 
lock_escalation.desc=Indicates whether a lock request was made as part of a lock escalation. 
lock_mode_requested.desc=The lock mode being requested by the application. 
deadlock_id.desc=The deadlock identifier for a deadlock. 
deadlock_node.desc=Partition number where the deadlock occurred. 
participant_no.desc=A sequence number uniquely identifying this participant within this deadlock. 
participant_no_holding_lk.desc=The participant number of the application that is holding a lock on the object that this application is waiting to obtain. 
rolled_back_participant_no.desc=The participant number identifying the rolled back application. 
locks_in_list.desc=The number of locks held by a particular application to be reported on by the event monitor. 
lock_name.desc=Internal binary lock name. This element serves as a unique identifier for locks. 
lock_attributes.desc=Lock attributes. 
lock_release_flags.desc=Lock release flags. 
lock_count.desc=The number of locks on the lock being held. 
lock_hold_count.desc=The number of holds placed on the lock. Holds are placed on locks by cursors registered with the WITH HOLD clause and some DB2 utilities. Locks with holds are not released when transactions are committed. 
lock_current_mode.desc=During a lock conversion operation, the type of lock held before the conversion is completed. The following is an example of a scenario that describes lock conversion: During an update or delete operation it is possible to wait for an X lock on the target row. If the transaction is holding an S or V lock on the row, this would require a conversion. At this point, the lock_current_mode element is assigned a value of S or V, while the lock waits to be converted to an X lock. 
num_indoubt_trans.desc=The number of outstanding indoubt transactions in the database. 
lock_waits.desc=The total number of times that applications or connections waited for locks. 
lock_wait_time.desc=The total elapsed time waited for a lock. Elapsed time is given in milliseconds. 
locks_waiting.desc=Indicates the number of agents waiting on a lock. 
uow_lock_wait_time.desc=The total amount of elapsed time this unit of work has spent waiting for locks. 
lock_wait_start_time.desc=The date and time that this application started waiting to obtain a lock on the object that is currently locked by another application. 
lock_timeout_val.desc=Indicates the timeout value (in seconds) when an application has issued a SET CURRENT LOCK TIMEOUT statement. In cases where the statement has not been executed, the database level lock timeout will be shown.
agent_id_holding_lock.desc=The application handle of the agent holding a lock for which this application is waiting. The lock monitor group must be turned on to obtain this information. 
appl_id_holding_lk.desc=The application ID of the application that is holding a lock on the object that this application is waiting to obtain. 
sequence_no_holding_lk.desc=The sequence number of the application that is holding a lock on the object that this application is waiting to obtain. 
rolled_back_appl_id.desc=Application id that was rolled back when a deadlock occurred. 
rolled_back_agent_id.desc=Agent that was rolled back when a deadlock occurred. 
rolled_back_sequence_no.desc=The sequence number of the application that was rolled back when a deadlock occurred. 
rf_timestamp.desc=The timestamp of the log being processed. 
ts_name.desc=The name of the table space currently rolled forward. 
rf_type.desc=The type of rollforward in progress. 
rf_log_num.desc=The log being processed. 
rf_status.desc=The status of the recovery. 
tablespace_id.desc=An integer that uniquely represents a table space used by the current database. 
tablespace_name.desc=The name of a table space. 
tablespace_type.desc=The type of a table space. 
tablespace_content_type.desc=The type of content in a table space. 
tablespace_state.desc=This element describes the current state of a table space. 
tablespace_page_size.desc=Page size used by a table space in bytes. 
tablespace_extent_size.desc=The extent size used by a table space. 
tablespace_prefetch_size.desc=The maximum number of pages the prefetcher gets from the disk at a time. 
tablespace_cur_pool_id.desc=The buffer pool identifier for a buffer pool that a table space is currently using. 
tablespace_next_pool_id.desc=The buffer pool identifier for a buffer pool that a table space will use at the next database startup. 
tablespace_total_pages.desc=Total number of pages in a table space. 
tablespace_usable_pages.desc=The total number of pages in a table space minus overhead pages. 
tablespace_used_pages.desc=The total number of pages that are currently used (not free) in a table space. 
tablespace_free_pages.desc=The total number of pages that are currently free in a table space. 
tablespace_pending_free_pages.desc=The number of pages in a table space which would become free if all pending transactions are committed or rolled back and new space is requested for an object. 
tablespace_page_top.desc=The page in a table space that is holding the high-water mark. 
tablespace_rebalancer_mode.desc=An integer that represents whether a forward or reverse rebalance is taking place. 
tablespace_rebalancer_start_time.desc=A timestamp representing when a rebalancer was initially started. 
tablespace_rebalancer_restart_time.desc=A timestamp representing when a rebalancer was restarted after being paused or stopped. 
tablespace_rebalancer_extents_remaining.desc=The number of extents to be moved. This value is calculated at either the rebalancer start time or restart time (whichever is most recent). 
tablespace_rebalancer_extents_processed.desc=The number of extents that the rebalancer has already moved since the rebalancer has been started or restarted (whichever is most recent). 
tablespace_rebalancer_last_extent_moved.desc=The last extent moved by the rebalancer. 
tablespace_rebalancer_priority.desc=The priority at which the rebalancer is running in the database. 
tablespace_num_quiescers.desc=The number of users quiescing the table space (can be in the range of 0 to 5). 
quiescer_auth_id.desc=Authorization ID of the user holding a quiesce state. 
quiescer_agent_id.desc=Agent ID of the agent holding a quiesce state. 
quiescer_ts_id.desc=The table space ID of the object that causes a table space to be quiesced. 
quiescer_obj_id.desc=The object ID of the object that causes a table space to be quiesced. 
quiescer_state.desc=The type of quiesce being done (for example, "SHARE", "INTENT TO UPDATE", or "EXCLUSIVE"). 
tablespace_state_change_object_id.desc=The object that caused the table space state to be set to "Load pending" or "Delete pending". 
tablespace_state_change_ts_id.desc=If the table space state is "Load pending" or "Delete pending", this shows the table space ID of the object that caused the table space state to be set. 
tablespace_min_recovery_time.desc=A timestamp showing the earliest point in time to which a table space can be rolled forward. 
tablespace_num_containers.desc=Total number of containers in the table space. 
container_id.desc=An integer that uniquely defines a container within a table space. 
container_name.desc=The name of a container. 
container_type.desc=The type of the container. 
container_total_pages.desc=The total number of pages occupied by the container. 
container_usable_pages.desc=The total number of usable pages in a container. 
container_stripe_set.desc=The stripe set that a container belongs to. 
container_accessible.desc=This element describes if a container is accessible or not (1 meaning yes, 0 meaning no). 
tablespace_num_ranges.desc=The number of ranges (entries) in the table space map. This can be in the range of 1 to 100's (but is usually less than a dozen). The table space map only exists for DMS table spaces. 
range_stripe_set_number.desc=This value represents the stripe set in which a range resides. 
range_number.desc=This value represents the number of a range within the table space map. 
range_max_page_number.desc=This value represents the maximum page number that is mapped by a range. 
range_max_extent.desc=This value represents the maximum extent number that is mapped by a range. 
range_start_stripe.desc=This value represents the number of the first stripe in a range. 
range_end_stripe.desc=This value represents the number of the last stripe in a range. 
range_adjustment.desc=This value represents the offset into the container array in which a range actually starts. 
range_num_containers.desc=This value represents the number of containers in the current range. 
range_container_id.desc=An integer that uniquely defines a container within a range. 
range_offset.desc=The offset from stripe 0 of the beginning of the stripe set to which a range belongs. 
fs_caching.desc=Indicates whether a particular tablespace uses file system caching.
table_type.desc=The type of table for which information is returned. 
table_name.desc=The name of the table. 
table_schema.desc=The schema of the table. 
rows_deleted.desc=This is the number of row deletions attempted. 
rows_inserted.desc=This is the number of row insertions attempted. 
rows_updated.desc=This is the number of row updates attempted. 
rows_selected.desc=This is the number of rows that have been selected and returned to the application. 
rows_written.desc=This is the number of rows changed (inserted, deleted or updated) in the table. 
rows_read.desc=This is the number of rows read from the table. 
overflow_accesses.desc=The number of accesses (reads and writes) to overflowed rows of this table. 
int_rows_deleted.desc=This is the number of rows deleted from the database as a result of internal activity. 
int_rows_updated.desc=This is the number of rows updated from the database as a result of internal activity. 
int_rows_inserted.desc=The number of rows inserted into the database as a result of internal activity caused by triggers. 
table_file_id.desc=This is the file ID (FID) for the table. 
page_reorgs.desc=The number of page reorganizations executed for a table. 
data_object_pages.desc=The number of disk pages consumed by a table. This size represents the base table size only. Space consumed by index objects, LOB data, and long data are reported by index_object_pages , lob_object_pages , and long_object_pages , respectively.
index_object_pages.desc=The number of disk pages consumed by all indexes defined on a table.
lob_object_pages.desc=The number of disk pages consumed by LOB data.
long_object_pages.desc=The number of disk pages consumed by long data in a table.
reorg_type.desc=Table reorganize attribute settings. 
reorg_status.desc=The status of an in-place (online) table reorganization. This is not applicable to classic (offline) table reorganizations. 
reorg_phase.desc=Table reorganize phase. This applies to classic (offline) table reorganizations only). 
reorg_phase_start.desc=The start time of a phase of table reorganization. 
reorg_max_phase.desc=The maximum number of reorganization phases that will occur during reorganization processing. This applies to classic (offline) reorganizations only. 
reorg_current_counter.desc=A unit of progress that indicates the amount of table reorganization that has been completed. The amount of progress this value represents is relative to the value of reorg_max_counter, which represents the total amount of table reorganization that is to be done. 
reorg_max_counter.desc=A value that indicates the total amount of work to be done in a table reorganization. This value can be used with reorg_current_counter, which represents the amount of work completed, to determine the progress of a table reorganization. 
reorg_completion.desc=Table reorganize success indicator. 
reorg_start.desc=The start time of a table reorganization. 
reorg_end.desc=The end time of a table reorganization. 
reorg_index_id.desc=The index being used to reorganize the table. 
reorg_tbspc_id.desc=The table space in which the table will be reorganized. 
open_rem_curs.desc=The number of remote cursors currently open for this application, including those cursors counted by open_rem_curs_blk. 
open_rem_curs_blk.desc=The number of remote blocking cursors currently open for this application. 
rej_curs_blk.desc=The number of times that a request for an I/O block at server was rejected and the request was converted to non-blocked I/O. 
acc_curs_blk.desc=The number of times that a request for an I/O block was accepted. 
open_loc_curs.desc=The number of local cursors currently open for this application, including those cursors counted by open_loc_curs_blk. 
open_loc_curs_blk.desc=The number of local blocking cursors currently open for this application. 
static_sql_stmts.desc=The number of static SQL statements that were attempted. 
dynamic_sql_stmts.desc=The number of dynamic SQL statements that were attempted. 
failed_sql_stmts.desc=The number of SQL statements that were attempted, but failed. 
commit_sql_stmts.desc=The total number of SQL COMMIT statements that have been attempted. 
rollback_sql_stmts.desc=The total number of SQL ROLLBACK statements that have been attempted. 
select_sql_stmts.desc=The number of SQL SELECT statements that were executed. 
uid_sql_stmts.desc=The number of SQL UPDATE, INSERT, and DELETE statements that were executed. 
ddl_sql_stmts.desc=This element indicates the number of SQL Data Definition Language (DDL) statements that were executed. 
int_auto_rebinds.desc=The number of automatic rebinds (or recompiles) that have been attempted. 
int_commits.desc=The total number of commits initiated internally by the database manager. 
int_rollbacks.desc=The total number of rollbacks initiated internally by the database manager. 
int_deadlock_rollbacks.desc=The total number of forced rollbacks initiated by the database manager due to a deadlock. A rollback is performed on the current unit of work in an application selected by the database manager to resolve the deadlock. 
sql_reqs_since_commit.desc=Number of SQL requests that have been submitted since the last commit. 
stmt_node_number.desc=Node where the statement was executed. 
binds_precompiles.desc=The number of binds and pre-compiles attempted. 
stmt_type.desc=The type of statement processed. 
stmt_operation.desc=The statement operation currently being processed or most recently processed (if none currently running). 
package_name.desc=The name of the package that contains the SQL statement currently executing. 
consistency_token.desc=For a given package name and creator, there can exist (starting in DB2 Version 8) multiple versions. The package consistency token helps to identify the version of the package that contains the SQL currently executing. 
package_version_id.desc=For a given package name and creator, there can exist (starting in DB2 Version 8) multiple versions. The package version identifies the version identifier of the package that contains the SQL currently executing. The version of a package is determined at precompile (PREP) of the embedded SQL program using the VERSION keyword. If not specified at precompile time the package version has a value of "" (empty string). 
section_number.desc=The internal section number in the package for the SQL statement currently processing or most recently processed. 
cursor_name.desc=The name of the cursor corresponding to this SQL statement. 
creator.desc=The authorization ID of the user that pre-compiled the application. 
stmt_start.desc=The date and time when the stmt_operation started executing. 
stmt_stop.desc=The date and time when the stmt_operation stopped executing. 
stop_time.desc=The date and time when the statement stopped executing. 
start_time.desc=The date and time of unit of work start, statement start, or deadlock detection. 
stmt_elapsed_time.desc=The elapsed execution time of the most recently completed statement. 
stmt_text.desc=This is the text of the dynamic SQL statement. 
stmt_sorts.desc=The total number of times that a set of data was sorted in order to process the stmt_operation. 
fetch_count.desc=For the stmt snapshot monitoring level and the statement event type: the number of successful fetches performed on a specific cursor. 
sqlca.desc=The SQLCA data structure that was returned to the application at statement completion. 
query_card_estimate.desc=An estimate of the number of rows that will be returned by a query. 
query_cost_estimate.desc=Estimated cost, in timerons, for a query, as determined by the SQL compiler. 
ss_number.desc=Identifies the subsection associated with the returned information. 
ss_node_number.desc=Node where the subsection was executed. 
ss_status.desc=The current status of an executing subsection. 
ss_exec_time.desc=The time in seconds that it took a subsection to execute. 
tq_wait_for_any.desc=This flag is used to indicate that the subsection is blocked because it is waiting to receive rows from any node. 
tq_node_waited_for.desc=If the subsection status ss_status is waiting to receive or waiting to send and tq_wait_for_any is FALSE, then this is the number of the node that this agent is waiting for. 
tq_tot_send_spills.desc=Total number of tablequeue buffers overflowed to a temporary table. 
tq_cur_send_spills.desc=Current number of tablequeue buffers residing in a temporary table. 
tq_rows_read.desc=Total number of rows read from tablequeues. 
tq_rows_written.desc=Total number of rows written to tablequeues. 
tq_max_send_spills.desc=Maximum number of tablequeue buffers overflowed to a temporary table. 
tq_id_waiting_on.desc=The agent that is waiting. 
num_executions.desc=The number of times that an SQL statement has been executed. 
num_compilations.desc=The number of different compilations for a specific SQL statement. 
prep_time_worst.desc=The longest amount of time in microseconds that was required to prepare a specific SQL statement. 
prep_time_best.desc=The shortest amount of time that was required to prepare a specific SQL statement. 
total_exec_time.desc=The total time in seconds and microseconds that was spent executing a particular statement in the SQL cache. 
num_agents.desc=Number of concurrent agents currently executing a statement or subsection. 
agents_top.desc=At the application level, this is the maximum number of agents that were used when executing the statement. At the database level, it is the maximum number of agents for all applications. 
degree_parallelism.desc=The degree of parallelism requested when the query was bound. 
agent_usr_cpu_time.desc=The total CPU time (in seconds and microseconds) used by database manager agent process. 
agent_sys_cpu_time.desc=The total system CPU time (in seconds and microseconds) used by the database manager agent process. 
stmt_usr_cpu_time.desc=The total user CPU time (in seconds and microseconds) used by the currently executing statement. 
stmt_sys_cpu_time.desc=The total system CPU time (in seconds and microseconds) used by the currently executing statement. 
user_cpu_time.desc=The total user CPU time (in seconds and microseconds) used by the database manager agent process, the unit of work, or the statement. 
system_cpu_time.desc=The total system CPU time (in seconds and microseconds) used by the database manager agent process, the unit of work, or the statement. 
ss_usr_cpu_time.desc=The total user CPU time (in seconds and microseconds) used by the currently executing statement subsection. 
ss_sys_cpu_time.desc=The total system CPU time (in seconds and microseconds) used by the currently executing statement subsection. 
total_sys_cpu_time.desc=The total system CPU time for an SQL statement. 
total_usr_cpu_time.desc=The total user CPU time for an SQL statement. 
last_reset.desc=Indicates the date and time that the monitor counters were reset for the application issuing the GET SNAPSHOT. 
input_db_alias.desc=The alias of the database provided when calling the snapshot function. 
time_stamp.desc=The date and time when the database system monitor information was collected. 
num_nodes_in_db2_instance.desc=The number of nodes on the instance where the snapshot was taken. 
count.desc=The number of consecutive overflows that have occurred. 
first_overflow_time.desc=The date and time of the first overflow recorded by this overflow record. 
last_overflow_time.desc=The date and time of the last overflow recorded this overflow record. 
byte_order.desc=The byte ordering of numeric data, specifically whether the event data stream was generated on a "big endian" server (for example, a RISC System/6000) or "little endian" server (for example, an Intel-based PC running Windows 2000). 
version.desc=The version of the database manager that produced the event monitor data stream. 
event_monitor_name.desc=The name of the event monitor that created the event data stream. 
partial_record.desc=Indicates that an event monitor record is only a partial record. 
event_time.desc=The date and time an event occurred. 
evmon_flushes.desc=The number of times the FLUSH EVENT MONITOR SQL statement has been issued. 
evmon_activates.desc=The number of times an event monitor has been activated. 
sql_req_id.desc=The nature of the timestamp in the MESSAGE_TIME column. This element is only used in the CONTROL table by write-to-table event monitors. 
message.desc=The request identifier for an operation in an SQL statement.
message_time.desc=The timestamp corresponding to the event described in the MESSAGE column. This element is only used in the CONTROL table by write-to-table event monitors. 
partition_number.desc=This element is only used in the CONTROL table by write-to-table event monitors in a partitioned database environment. This value indicates the number of the partition where event monitor data is inserted. 
hadr_role.desc=The current HADR role of the database. 
hadr_state.desc=The current HADR state of the database.
hadr_syncmode.desc=The current HADR synchronization mode of the database.
hadr_connect_status.desc=The current HADR connection status of the database.
hadr_connect_time.desc=Shows one of the following: HADR connection time, HADR congestion time, HADR disconnection time 
hadr_heartbeat.desc=Number of missed heartbeats on the HADR connection. If the database is in HADR primary or standby role, this element indicates the health of the HADR connection. A heartbeat is a message sent from the other HADR node at regular intervals. If the value for this element is zero, no heartbeats have been missed and the connection is healthy. The higher the value, the worse the condition of the connection.
hadr_local_host.desc=The local HADR host name. The value is displayed as a host name string or an IP address string such as "1.2.3.4". This element should be ignored if the database's HADR role is standard.
hadr_local_service.desc=The local HADR TCP service. This value is displayed as a service name string or a port number string. This element should be ignored if the database's HADR role is standard.
hadr_remote_host.desc=The remote HADR host name. The value is displayed as a host name string or an IP address string such as "1.2.3.4". This element should be ignored if the database's HADR role is standard.
hadr_remote_service.desc=The remote HADR TCP service. This value is displayed as a service name string or a port number string. This element should be ignored if the database's HADR role is standard.
hadr_remote_instance.desc=The remote HADR instance name. This element should be ignored if the database's HADR role is standard.
hadr_timeout.desc=The number of seconds it takes for an HADR database server to consider a communication attempt has failed. For an attempt to fail, an HADR database server must not receive a reply message from its partner within the number of seconds listed by this element. This element should be ignored if the database's HADR role is standard.
hadr_primary_log_file.desc=The name of the current log file on the primary HADR database. This element should be ignored if the database's HADR role is standard.
hadr_primary_log_page.desc=The page number in the current log file indicating the current log position on the primary HADR database. The page number is relative to the log file. For example, page zero is the beginning of the file. This element should be ignored if the database's HADR role is standard.
hadr_primary_log_lsn.desc=The current log position of the primary HADR database. Log sequence number (LSN) is a byte offset in the database's log stream. This element should be ignored if the database's HADR role is standard. 
hadr_standby_log_file.desc=The name of the current log file on the standby HADR database. This element should be ignored if the database's HADR role is standard. 
hadr_standby_log_page.desc=The page number in the current log file indicating the current log position on the standby HADR database. The page number is relative to the log file. For example, page zero is the beginning of the file. This element should be ignored if the database's HADR role is standard. 
hadr_standby_log_lsn.desc=The current log position of the standby HADR database. Log sequence number (LSN) is a byte offset in the database's log stream. This element should be ignored if the database's HADR role is standard. 
hadr_log_gap.desc=This element shows the running average of the gap between the primary Log sequence number (LSN) and the standby log LSN. The gap is measured in number of bytes. 
dcs_db_name.desc=The name of the DCS database as cataloged in the DCS directory. 
host_db_name.desc=The real name of the host database for which information is being collected or to which the application is connected. This is the name that was given to the database when it was created. 
gw_db_alias.desc=The alias used at the DB2 Connect gateway to connect to the host database. 
gw_con_time.desc=The date and time when the first connection to the host database was initiated from the DB2 Connect gateway. 
gw_connections_top.desc=The maximum number of concurrent connections to a host database that have been handled by the DB2 Connect gateway since the first database connection. 
gw_total_cons.desc=The total number of connections attempted from the DB2 Connect gateway since the last db2start command or the last reset. 
gw_cur_cons.desc=The current number of connections to host databases being handled by the DB2 Connect gateway. 
gw_cons_wait_host.desc=The current number of connections to host databases being handled by the DB2 Connect gateway that are waiting for a reply from the host. 
gw_cons_wait_client.desc=The current number of connections to host databases being handled by the DB2 Connect gateway that are waiting for the client to send a request. 
gw_exec_time.desc=The time in seconds and microseconds at the DB2 Connect gateway to process an application request (since the connection was established), or to process a single statement. 
sql_stmts.desc=For data transmission snapshots, this element represents the number of SQL statements taking n data transmissions between the DB2 Connect gateway and the host during statement processing. The range n is specified by the num_transmissions_group element. For DCS DATABASE snapshots, this statement count is the number of statements since the database was activated. For DCS APPLICATION snapshots, this statement count is the number of statements since the connection to the database was established by this application. 
sql_chains.desc=Represents the number of SQL statements taking n data transmissions between the DB2 Connect gateway and the host during statement processing. The range n is specified by the num_transmissions_group element. 
open_cursors.desc=The number of cursors currently open for an application. 
dcs_appl_status.desc=The status of a DCS application at the DB2 Connect gateway. 
agent_status.desc=In a connection concentrator environment, this value shows which applications currently have associated agents. 
host_ccsid.desc=This is the coded character set identifier (CCSID) of the host database. 
outbound_comm_protocol.desc=The communication protocol used between the DB2 Connect gateway and the host. 
outbound_comm_address.desc=This is the communication address of the target database. For example, it could be an SNA net ID and LU partner name, or an IP address and port number for TCP/IP. 
inbound_comm_address.desc=This is the communication address of the client. For example, it could be an SNA net ID and LU partner name, or an IP address and port number for TCP/IP. 
inbound_bytes_received.desc=The number of bytes received by the DB2 Connect gateway from the client, excluding communication protocol overhead (for example, TCP/IP or SNA headers). 
outbound_bytes_sent.desc=The number of bytes sent by the DB2 Connect gateway to the host, excluding communication protocol overhead (for example, TCP/IP or SNA headers). 
outbound_bytes_received.desc=The number of bytes received by the DB2 Connect gateway from the host, excluding communication protocol overhead (for example, TCP/IP or SNA headers). 
inbound_bytes_sent.desc=The number of bytes sent by the DB2 Connect gateway to the client, excluding communication protocol overhead (for example, TCP/IP or SNA headers). 
outbound_bytes_sent_top.desc=Maximum number of bytes sent per statement or chain by the DB2 Connect gateway to the host during the processing of all the statements or chains against this DCS database, or in this DCS application, that used this number of data transmissions. 
outbound_bytes_received_top.desc=Maximum number of bytes received per statement or chain by the DB2 Connect gateway from the host during the processing of all the statements or chains against this DCS database, or in this DCS application, that used this number of data transmissions. 
outbound_bytes_sent_bottom.desc=The lowest number of bytes sent per statement or chain by the DB2 Connect gateway to the host during the processing of all the statements or chains against this DCS database, or in this DCS application, that used this number of data transmissions. 
outbound_bytes_received_bottom.desc=The lowest number of bytes received per statement or chain by the DB2 Connect gateway from the host during the processing of all the statements or chains against this DCS database, or in this DCS application, that used this number of data transmissions. 
max_data_sent_128.desc=This element represents the number of statements or chains with outbound bytes sent between 1 and 128 inclusive. 
max_data_received_128.desc=This element represents the number of statements or chains with outbound bytes received between 1 and 128 inclusive. 
max_data_sent_256.desc=This element represents the number of statements or chains with outbound bytes sent between 129 and 256 inclusive. 
max_data_received_256.desc=This element represents the number of statements or chains with outbound bytes received between 129 and 256 inclusive. 
max_data_sent_512.desc=This element represents the number of statements or chains with outbound bytes sent between 257 and 512 inclusive. 
max_data_received_512.desc=This element represents the number of statements or chains with outbound bytes received between 257 and 512 inclusive. 
max_data_sent_1024.desc=This element represents the number of statements or chains with outbound bytes sent between 513 and 1024 inclusive. 
max_data_received_1024.desc=This element represents the number of statements or chains with outbound bytes received between 513 and 1024 inclusive. 
max_data_sent_2048.desc=This element represents the number of statements or chains with outbound bytes sent between 1025 and 2048 inclusive. 
max_data_received_2048.desc=This element represents the number of statements or chains with outbound bytes received between 1025 and 2048 inclusive. 
max_data_sent_4096.desc=This element represents the number of statements or chains with outbound bytes sent between 2049 and 4096 inclusive. 
max_data_received_4096.desc=This element represents the number of statements or chains with outbound bytes received between 2049 and 4096 inclusive. 
max_data_sent_8192.desc=This element represents the number of statements or chains with outbound bytes sent between 4097 and 8192 inclusive. 
max_data_received_8192.desc=This element represents the number of statements or chains with outbound bytes received between 4097 and 8192 inclusive. 
max_data_sent_16384.desc=This element represents the number of statements or chains with outbound bytes sent between 8193 and 16384 inclusive. 
max_data_received_16384.desc=This element represents the number of statements or chains with outbound bytes received between 8193 and 16384 inclusive. 
max_data_sent_31999.desc=This element represents the number of statements or chains with outbound bytes sent between 16385 and 31999 inclusive. 
max_data_received_31999.desc=This element represents the number of statements or chains with outbound bytes received between 16385 and 31999 inclusive. 
max_data_sent_64000.desc=This element represents the number of statements or chains with outbound bytes sent between 32000 and 64000 inclusive. 
max_data_received_64000.desc=This element represents the number of statements or chains with outbound bytes received between 32000 and 64000 inclusive. 
max_data_sent_gt64000.desc=This element represents the number of statements or chains with outbound bytes sent greater than 64000. 
max_data_received_gt64000.desc=This element represents the number of statements or chains with outbound bytes received greater than 64000. 
max_network_time_1_ms.desc=This element represents the number of statements or chains whose network time was less or equal to 1 millisecond. (Network time is the difference between host response time and elapsed execution time for a statement or chain.) 
max_network_time_4_ms.desc=This element represents the number of statements or chains whose network time was greater than 1 millisecond but less or equal to 4 milliseconds. (Network time is the difference between host response time and elapsed execution time for a statement or chain.) 
max_network_time_16_ms.desc=This element represents the number of statements or chains whose network time was greater than 4 milliseconds but less or equal to 16 milliseconds. (Network time is the difference between host response time and elapsed execution time for a statement or chain.) 
max_network_time_100_ms.desc=This element represents the number of statements or chains whose network time was greater than 16 milliseconds but less or equal to 100 milliseconds. (Network time is the difference between host response time and elapsed execution time for a statement or chain.) 
max_network_time_500_ms.desc=This element represents the number of statements or chains whose network time was greater than 100 milliseconds but less or equal to 500 milliseconds. (Network time is the difference between host response time and elapsed execution time for a statement or chain.) 
max_network_time_gt500_ms.desc=This element represents the number of statements or chains whose network time was greater than 500 milliseconds. (Network time is the difference between host response time and elapsed execution time for a statement or chain.) 
network_time_top.desc=This element represents the longest network time for a statement executed against this DCS database or in this DCS application, or having used this many data transmissions. (Network time is the difference between host response time and elapsed execution time for a statement.) 
network_time_bottom.desc=This element represents the shortest network time for a statement executed against this DCS database or in this DCS application, or having used this many data transmissions. (Network time is the difference between host response time and elapsed execution time for a statement.) 
xid.desc=A unique transaction identifier (across all databases) generated by a transaction manager in a two-phase commit transaction. 
elapsed_exec_time.desc=At the DCS statement level, this is the elapsed time spent processing an SQL request on a host database server. This value is reported by this server. In contrast to the host_response_time element, this element does not include the network elapsed time between DB2 Connect and the host database server. At other levels, this value represents the sum of the host execution times for all the statements that were executed for a particular database or application, or for those statements that used a given number of data transmissions. 
host_response_time.desc=At the DCS statement level, this is the elapsed time between the time that the statement was sent from the DB2 Connect gateway to the host for processing and the time when the result was received from the host. At DCS database and DCS application levels, it is the sum of the elapsed times for all the statements that were executed for a particular application or database. At the data transmission level, this is the sum of host response times for all the statements that used this many data transmissions. 
num_transmissions.desc=This is a legacy monitor element that is not relevant for DB2 UDB Version 8.1.2 or higher. If you are using DB2 UDB Version 8.1.2 or higher, refer to the num_transmissions_group monitor element. Number of data transmissions between the DB2 Connect gateway and the host that was used to process this DCS statement. (One data transmission consists of either one send or one receive.) 
num_transmissions_group.desc=The range of data transmissions between the DB2 Connect gateway and the host that was used to process this DCS statement. (One data transmission consists of either one send or one receive.)
con_response_time.desc=The elapsed time between the start of connection processing and actual establishment of a connection, for the most recent DCS application that connected to this database. 
con_elapsed_time.desc=The elapsed time that the DCS application that most recently disconnected from this host database was connected. 
gw_comm_errors.desc=The number of times that a communication error (SQL30081) occurred while a DCS application was attempting to connect to a host database, or while it was processing an SQL statement. 
gw_comm_error_time.desc=The date and time when the most recent communication error (SQL30081) occurred while a DCS application was attempting to connect to a host database, or while it was processing an SQL statement. 
blocking_cursor.desc=This element indicates if the statement being executed is using a blocking cursor. 
tpmon_client_userid.desc=The client user ID generated by a transaction manager and provided to the server, if the sqleseti API is used. 
tpmon_client_wkstn.desc=Identifies the client's system or workstation (for example CICS EITERMID), if the sqleseti API was issued in this connection. 
tpmon_client_app.desc=Identifies the server transaction program performing the transaction, if the sqleseti API was issued in this connection. 
tpmon_acc_str.desc=The data passed to the target database for logging and diagnostic purposes, if the sqleseti API was issued in this connection. 
datasource_name.desc=This element contains the name of the data source whose remote access information is being displayed by the federated server. This element corresponds to the 'SERVER' column in SYSCAT.SERVERS. 
disconnects.desc=This element contains a count of the total number of times the federated server has disconnected from this data source on behalf of any application 
insert_sql_stmts.desc=This element contains a count of the total number of times the federated server has issued an INSERT statement to this data source on behalf of any application 
update_sql_stmts.desc=This element contains a count of the total number of times the federated server has issued an UPDATE statement to this data source on behalf of any application 
delete_sql_stmts.desc=This element contains a count of the total number of times the federated server has issued a DELETE statement to this data source on behalf of any application 
create_nickname.desc=This element contains a count of the total number of times the federated server has created a nickname over an object residing on this data source on behalf of any application 
passthrus.desc=This element contains a count of the total number of SQL statements that the federated server has passed through directly to this data source on behalf of any application 
stored_procs.desc=This element contains a count of the total number of stored procedures that the federated server has called at this data source on behalf of any application 
remote_locks.desc=This element contains a count of the total number of remote locks that the federated server has called at this data source on behalf of any application 
sp_rows_selected.desc=This element contains the number of rows sent from the data source to the federated server as a result of stored procedure operations for this application 
select_time.desc=This element contains the aggregate amount of time, in milliseconds, that it has taken this data source to respond to queries from all applications or a single application running on this federated server instance. The response time is measured as the difference in time between the time the federated server requests a row from the data source, and the time the row is available for the federated server to use. 
insert_time.desc=This element contains the aggregate amount of time, in milliseconds, that it has taken this data source to respond to INSERTs from all applications or a single application running on this federated server instance. The response time is measured as the difference in time between the time the federated server submits an INSERT statement to the data source, and the time the data source responds to the federated server, indicating that the INSERT has been processed. 
update_time.desc=This element contains the aggregate amount of time, in milliseconds, that it has taken this data source to respond to UPDATEs from all applications or a single application running on this federated server instance. The response time is measured as the difference in time between the time the federated server submits an UPDATE statement to the data source, and the time the data source responds to the federated server, indicating the UPDATE has been processed. 
delete_time.desc=This element contains the aggregate amount of time, in milliseconds, that it has taken this data source to respond to DELETEs from all applications or a single application running on this federated server instance. The response time is measured as the difference in time between the time the federated server submits a DELETE statement to the data source, and the time the data source responds to the federated server, indicating the DELETE has been processed. 
create_nickname_time.desc=This element contains the aggregate amount of time, in milliseconds, that it has taken this data source to process CREATE NICKNAME statements from all applications or a single application running on this federated server instance. The response time is measured as the difference between the time the federated server started retrieving information from the data source to process the CREATE NICKNAME statement, and the time it took to retrieve all the required data from the data source. 
passthru_time.desc=This element contains the aggregate amount of time, in milliseconds, that it has taken this data source to respond to PASSTHRU statements from all applications or a single application running on this federated server instance. The response time is measured as the difference between the time the federated server submits a PASSTHRU statement to the data source, and the time it takes the data source to respond, indicating that the statement has been processed. 
stored_proc_time.desc=This element contains the aggregate amount of time, in milliseconds, that it has taken this data source to respond to stored procedure statements from all applications or a single application running on this federated server instance. The response time is measured as the difference between the time the federated server submits a stored procedure to the data source, and the time it takes the data source to respond, indicating that the stored procedure has been processed. 
remote_lock_time.desc=This element contains the aggregate amount of time, in milliseconds, that this data source spends in a remote lock from all applications or a single application running on this federated server instance. The response time is measured as the difference between the time the federated server submits a remote lock to the data source, and the time the federated server releases a remote lock at the data source 
