// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.ixora.jobs.remote;

public final class JobManagerImpl_Stub
    extends java.rmi.server.RemoteStub
    implements com.ixora.jobs.remote.JobManager, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_cancelJob_0;
    private static java.lang.reflect.Method $method_initialize_1;
    private static java.lang.reflect.Method $method_runJob_2;
    private static java.lang.reflect.Method $method_shutdown_3;
    
    static {
	try {
	    $method_cancelJob_0 = com.ixora.jobs.remote.JobManager.class.getMethod("cancelJob", new java.lang.Class[] {com.ixora.jobs.JobId.class});
	    $method_initialize_1 = com.ixora.remote.RemoteManaged.class.getMethod("initialize", new java.lang.Class[] {java.lang.String.class, com.ixora.remote.RemoteManagedListener.class});
	    $method_runJob_2 = com.ixora.jobs.remote.JobManager.class.getMethod("runJob", new java.lang.Class[] {com.ixora.jobs.JobDefinition.class});
	    $method_shutdown_3 = com.ixora.common.remote.Shutdownable.class.getMethod("shutdown", new java.lang.Class[] {});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public JobManagerImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of cancelJob(JobId)
    public void cancelJob(com.ixora.jobs.JobId $param_JobId_1)
	throws com.ixora.rms.exception.RMSException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_cancelJob_0, new java.lang.Object[] {$param_JobId_1}, 3588787932338353702L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of initialize(String, RemoteManagedListener)
    public void initialize(java.lang.String $param_String_1, com.ixora.remote.RemoteManagedListener $param_RemoteManagedListener_2)
	throws com.ixora.remote.exception.RemoteManagedListenerIsUnreachable, com.ixora.rms.exception.RMSException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_initialize_1, new java.lang.Object[] {$param_String_1, $param_RemoteManagedListener_2}, -9086994201516082088L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of runJob(JobDefinition)
    public com.ixora.jobs.JobId runJob(com.ixora.jobs.JobDefinition $param_JobDefinition_1)
	throws com.ixora.rms.exception.RMSException, java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_runJob_2, new java.lang.Object[] {$param_JobDefinition_1}, -3669686074484466682L);
	    return ((com.ixora.jobs.JobId) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of shutdown()
    public void shutdown()
	throws com.ixora.common.exception.AppException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_shutdown_3, null, -7207851917985848402L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.common.exception.AppException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
