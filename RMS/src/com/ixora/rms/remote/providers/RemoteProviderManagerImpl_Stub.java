// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.ixora.rms.remote.providers;

public final class RemoteProviderManagerImpl_Stub
    extends java.rmi.server.RemoteStub
    implements com.ixora.rms.remote.providers.RemoteProviderManager, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_activateProvider_0;
    private static java.lang.reflect.Method $method_configureAllProviders_1;
    private static java.lang.reflect.Method $method_configureProvider_2;
    private static java.lang.reflect.Method $method_deactivateAllProviders_3;
    private static java.lang.reflect.Method $method_deactivateProvider_4;
    private static java.lang.reflect.Method $method_getProviderPollBuffer_5;
    private static java.lang.reflect.Method $method_getProviderState_6;
    private static java.lang.reflect.Method $method_initialize_7;
    private static java.lang.reflect.Method $method_shutdown_8;
    private static java.lang.reflect.Method $method_startProvider_9;
    private static java.lang.reflect.Method $method_stopProvider_10;
    
    static {
	try {
	    $method_activateProvider_0 = com.ixora.rms.remote.providers.RemoteProviderManager.class.getMethod("activateProvider", new java.lang.Class[] {java.lang.String.class, com.ixora.rms.providers.ProviderConfiguration.class});
	    $method_configureAllProviders_1 = com.ixora.rms.remote.providers.RemoteProviderManager.class.getMethod("configureAllProviders", new java.lang.Class[] {com.ixora.rms.providers.ProviderConfiguration.class});
	    $method_configureProvider_2 = com.ixora.rms.remote.providers.RemoteProviderManager.class.getMethod("configureProvider", new java.lang.Class[] {com.ixora.rms.providers.ProviderId.class, com.ixora.rms.providers.ProviderConfiguration.class});
	    $method_deactivateAllProviders_3 = com.ixora.rms.remote.providers.RemoteProviderManager.class.getMethod("deactivateAllProviders", new java.lang.Class[] {});
	    $method_deactivateProvider_4 = com.ixora.rms.remote.providers.RemoteProviderManager.class.getMethod("deactivateProvider", new java.lang.Class[] {com.ixora.rms.providers.ProviderId.class});
	    $method_getProviderPollBuffer_5 = com.ixora.rms.remote.providers.RemoteProviderManager.class.getMethod("getProviderPollBuffer", new java.lang.Class[] {});
	    $method_getProviderState_6 = com.ixora.rms.remote.providers.RemoteProviderManager.class.getMethod("getProviderState", new java.lang.Class[] {com.ixora.rms.providers.ProviderId.class});
	    $method_initialize_7 = com.ixora.remote.RemoteManaged.class.getMethod("initialize", new java.lang.Class[] {java.lang.String.class, com.ixora.remote.RemoteManagedListener.class});
	    $method_shutdown_8 = com.ixora.common.remote.Shutdownable.class.getMethod("shutdown", new java.lang.Class[] {});
	    $method_startProvider_9 = com.ixora.rms.remote.providers.RemoteProviderManager.class.getMethod("startProvider", new java.lang.Class[] {com.ixora.rms.providers.ProviderId.class});
	    $method_stopProvider_10 = com.ixora.rms.remote.providers.RemoteProviderManager.class.getMethod("stopProvider", new java.lang.Class[] {com.ixora.rms.providers.ProviderId.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public RemoteProviderManagerImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of activateProvider(String, ProviderConfiguration)
    public com.ixora.rms.providers.ProviderId activateProvider(java.lang.String $param_String_1, com.ixora.rms.providers.ProviderConfiguration $param_ProviderConfiguration_2)
	throws com.ixora.rms.exception.RMSException, com.ixora.rms.providers.exception.InvalidProviderConfiguration, java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_activateProvider_0, new java.lang.Object[] {$param_String_1, $param_ProviderConfiguration_2}, 267725555647376077L);
	    return ((com.ixora.rms.providers.ProviderId) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of configureAllProviders(ProviderConfiguration)
    public void configureAllProviders(com.ixora.rms.providers.ProviderConfiguration $param_ProviderConfiguration_1)
	throws com.ixora.rms.exception.RMSException, com.ixora.rms.providers.exception.InvalidProviderConfiguration, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_configureAllProviders_1, new java.lang.Object[] {$param_ProviderConfiguration_1}, -6691369938739013997L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of configureProvider(ProviderId, ProviderConfiguration)
    public void configureProvider(com.ixora.rms.providers.ProviderId $param_ProviderId_1, com.ixora.rms.providers.ProviderConfiguration $param_ProviderConfiguration_2)
	throws com.ixora.rms.exception.RMSException, com.ixora.rms.providers.exception.InvalidProviderConfiguration, com.ixora.rms.providers.exception.ProviderNotActivated, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_configureProvider_2, new java.lang.Object[] {$param_ProviderId_1, $param_ProviderConfiguration_2}, 6283050291740613145L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of deactivateAllProviders()
    public void deactivateAllProviders()
	throws com.ixora.rms.exception.RMSException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_deactivateAllProviders_3, null, -4937633591316007368L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of deactivateProvider(ProviderId)
    public void deactivateProvider(com.ixora.rms.providers.ProviderId $param_ProviderId_1)
	throws com.ixora.rms.exception.RMSException, com.ixora.rms.providers.exception.ProviderNotActivated, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_deactivateProvider_4, new java.lang.Object[] {$param_ProviderId_1}, -4429205854491382004L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getProviderPollBuffer()
    public com.ixora.rms.providers.ProviderPollBuffer getProviderPollBuffer()
	throws com.ixora.rms.exception.RMSException, java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getProviderPollBuffer_5, null, -262543912999373190L);
	    return ((com.ixora.rms.providers.ProviderPollBuffer) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getProviderState(ProviderId)
    public com.ixora.rms.providers.ProviderState getProviderState(com.ixora.rms.providers.ProviderId $param_ProviderId_1)
	throws com.ixora.rms.exception.RMSException, java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getProviderState_6, new java.lang.Object[] {$param_ProviderId_1}, -2923284857460569595L);
	    return ((com.ixora.rms.providers.ProviderState) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of initialize(String, RemoteManagedListener)
    public void initialize(java.lang.String $param_String_1, com.ixora.remote.RemoteManagedListener $param_RemoteManagedListener_2)
	throws com.ixora.remote.exception.RemoteManagedListenerIsUnreachable, com.ixora.rms.exception.RMSException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_initialize_7, new java.lang.Object[] {$param_String_1, $param_RemoteManagedListener_2}, -9086994201516082088L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of shutdown()
    public void shutdown()
	throws com.ixora.common.exception.AppException, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_shutdown_8, null, -7207851917985848402L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.common.exception.AppException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of startProvider(ProviderId)
    public void startProvider(com.ixora.rms.providers.ProviderId $param_ProviderId_1)
	throws com.ixora.rms.exception.RMSException, com.ixora.rms.providers.exception.ProviderNotActivated, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_startProvider_9, new java.lang.Object[] {$param_ProviderId_1}, 5788476035706481044L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of stopProvider(ProviderId)
    public void stopProvider(com.ixora.rms.providers.ProviderId $param_ProviderId_1)
	throws com.ixora.rms.exception.RMSException, com.ixora.rms.providers.exception.ProviderNotActivated, java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_stopProvider_10, new java.lang.Object[] {$param_ProviderId_1}, 6785480561905386699L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (com.ixora.rms.exception.RMSException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
